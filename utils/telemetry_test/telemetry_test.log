2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing decorator for function: add_numbers
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: a
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'int'>
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: b
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'int'>
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - annotations=[{'name': 'a', 'is_required': True, 'type_': 'int', 'type_object': <class 'int'>}, {'name': 'b', 'is_required': True, 'type_': 'int', 'type_object': <class 'int'>}]
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: return
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'str'>
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing decorator for function: store_user_info
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: name
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'str'>
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: age
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'int'>
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - annotations=[{'name': 'name', 'is_required': True, 'type_': 'str', 'type_object': <class 'str'>}, {'name': 'age', 'is_required': True, 'type_': 'int', 'type_object': <class 'int'>}]
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: return
2025-07-11 11:01:08,943 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'str'>
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing decorator for function: add_numbers
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: a
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'int'>
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: b
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'int'>
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - annotations=[{'name': 'a', 'is_required': True, 'type_': 'int', 'type_object': <class 'int'>}, {'name': 'b', 'is_required': True, 'type_': 'int', 'type_object': <class 'int'>}]
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: return
2025-07-11 11:02:42,203 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'str'>
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing decorator for function: store_user_info
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: name
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'str'>
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: age
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'int'>
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - annotations=[{'name': 'name', 'is_required': True, 'type_': 'str', 'type_object': <class 'str'>}, {'name': 'age', 'is_required': True, 'type_': 'int', 'type_object': <class 'int'>}]
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: return
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'str'>
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing decorator for function: get_user_info
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - annotations=[]
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing param: return
2025-07-11 11:02:42,204 - semantic_kernel.functions.kernel_function_decorator - DEBUG - Parsing annotation: <class 'str'>
2025-07-11 11:02:42,204 - asyncio - DEBUG - Using selector: KqueueSelector
2025-07-11 11:02:42,225 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Extracting blocks from template: 
You are a helpful assistant that can perform calculations and manage user data.
You have access to functions for:
- Adding numbers
- Storing user information 
- Retrieving user information

Be conversational and use the functions when appropriate.

User: {{$user_input}}
Assistant: 
2025-07-11 11:02:42,225 - semantic_kernel - INFO - Starting conversation 1: Hi! Can you add 15 and 27 for me?
2025-07-11 11:02:42,226 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat invoking.
2025-07-11 11:02:42,226 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': 'Hi! Can you add 15 and 27 for me?'}
2025-07-11 11:02:42,227 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendering list of 3 blocks
2025-07-11 11:02:42,227 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendered prompt: 
You are a helpful assistant that can perform calculations and manage user data.
You have access to functions for:
- Adding numbers
- Storing user information 
- Retrieving user information

Be conversational and use the functions when appropriate.

User: Hi! Can you add 15 and 27 for me?
Assistant: 
2025-07-11 11:02:42,229 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-377a183a-a3d5-4ac6-ad3c-0e41494f7f49', 'json_data': {'messages': [{'role': 'user', 'content': 'You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: Hi! Can you add 15 and 27 for me?\nAssistant:'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:42,229 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:42,231 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-11 11:02:42,402 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x147cac260>
2025-07-11 11:02:42,402 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x147c31f50> server_hostname='api.openai.com' timeout=5.0
2025-07-11 11:02:42,445 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x111684290>
2025-07-11 11:02:42,446 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:42,446 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:42,446 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:42,446 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:42,446 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:44,402 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'559'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'565'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199922'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'23ms'), (b'x-request-id', b'req_635a0e61830e37d13508c6dc674a704c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=EdYtz.mm_wJ6_JNeovVXuYm78ds5xJ.2Yz4a_qlBjyU-1752220964-1.0.1.1-EG2tkCjqeq6kfSoVEe27fiTPI.nrfewIGnniMjNGB1DsF674DP4tCBiM7YWCzxniGB4fPSrgiLBthgF8Tu5DU_XSdjzTjelG.shF4WeGH5M; path=/; expires=Fri, 11-Jul-25 08:32:44 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ahqftNp407GOba0v4kNzIBDVZTY_V7XKHtep8HR8bVc-1752220964407-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7b78dfdb63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:44,404 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:44,405 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:44,406 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:44,407 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:44,407 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:44,407 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 11 Jul 2025 08:02:44 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'heltia-txbadh'), ('openai-processing-ms', '559'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '565'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199922'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '23ms'), ('x-request-id', 'req_635a0e61830e37d13508c6dc674a704c'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=EdYtz.mm_wJ6_JNeovVXuYm78ds5xJ.2Yz4a_qlBjyU-1752220964-1.0.1.1-EG2tkCjqeq6kfSoVEe27fiTPI.nrfewIGnniMjNGB1DsF674DP4tCBiM7YWCzxniGB4fPSrgiLBthgF8Tu5DU_XSdjzTjelG.shF4WeGH5M; path=/; expires=Fri, 11-Jul-25 08:32:44 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ahqftNp407GOba0v4kNzIBDVZTY_V7XKHtep8HR8bVc-1752220964407-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '95d6c7b78dfdb63e-IST'), ('content-encoding', 'br'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-07-11 11:02:44,407 - openai._base_client - DEBUG - request_id: req_635a0e61830e37d13508c6dc674a704c
2025-07-11 11:02:44,411 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=20, prompt_tokens=167, total_tokens=187, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:44,412 - semantic_kernel.connectors.ai.chat_completion_client_base - INFO - processing 1 tool calls in parallel.
2025-07-11 11:02:44,412 - semantic_kernel.kernel - INFO - Calling test_plugin-add_numbers function with args: {"a":15,"b":27}
2025-07-11 11:02:44,414 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-add_numbers invoking.
2025-07-11 11:02:44,414 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': 'Hi! Can you add 15 and 27 for me?', 'a': 15, 'b': 27}
2025-07-11 11:02:44,415 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-add_numbers succeeded.
2025-07-11 11:02:44,415 - semantic_kernel.functions.kernel_function - DEBUG - Function result: The sum of 15 and 27 is 42
2025-07-11 11:02:44,415 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 0.000667s
2025-07-11 11:02:44,418 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e41b9969-e5a7-490c-9f66-df06d1f08431', 'json_data': {'messages': [{'role': 'user', 'content': 'You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: Hi! Can you add 15 and 27 for me?\nAssistant:'}, {'role': 'assistant', 'tool_calls': [{'id': 'call_eT73mxhNjF26JQMfUjY6UylY', 'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'arguments': '{"a":15,"b":27}'}}]}, {'role': 'tool', 'content': 'The sum of 15 and 27 is 42', 'tool_call_id': 'call_eT73mxhNjF26JQMfUjY6UylY'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:44,419 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:44,420 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:44,421 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:44,421 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:44,422 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:44,422 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:46,149 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'1076'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1079'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199913'), (b'x-ratelimit-reset-requests', b'16.107s'), (b'x-ratelimit-reset-tokens', b'25ms'), (b'x-request-id', b'req_09a7f493c5cb55cf1a80860527c58af1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7c49d67b63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:46,150 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:46,150 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:46,151 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:46,151 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:46,151 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:46,151 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 11 Jul 2025 08:02:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'heltia-txbadh', 'openai-processing-ms': '1076', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1079', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '199913', 'x-ratelimit-reset-requests': '16.107s', 'x-ratelimit-reset-tokens': '25ms', 'x-request-id': 'req_09a7f493c5cb55cf1a80860527c58af1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95d6c7c49d67b63e-IST', 'content-encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'})
2025-07-11 11:02:46,152 - openai._base_client - DEBUG - request_id: req_09a7f493c5cb55cf1a80860527c58af1
2025-07-11 11:02:46,152 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=15, prompt_tokens=208, total_tokens=223, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:46,153 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat succeeded.
2025-07-11 11:02:46,153 - semantic_kernel.functions.kernel_function - DEBUG - Function result: Sure! The sum of 15 and 27 is 42.
2025-07-11 11:02:46,153 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 3.927019s
2025-07-11 11:02:46,153 - semantic_kernel - INFO - Completed conversation 1
2025-07-11 11:02:46,153 - semantic_kernel - INFO - Starting conversation 2: My name is Alice and I'm 30 years old. Can you store that?
2025-07-11 11:02:46,154 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat invoking.
2025-07-11 11:02:46,154 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': "My name is Alice and I'm 30 years old. Can you store that?"}
2025-07-11 11:02:46,154 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendering list of 3 blocks
2025-07-11 11:02:46,154 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendered prompt: 
You are a helpful assistant that can perform calculations and manage user data.
You have access to functions for:
- Adding numbers
- Storing user information 
- Retrieving user information

Be conversational and use the functions when appropriate.

User: My name is Alice and I&#x27;m 30 years old. Can you store that?
Assistant: 
2025-07-11 11:02:46,155 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-09a5bc15-497f-41d4-b346-6901378a6d9d', 'json_data': {'messages': [{'role': 'user', 'content': "You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: My name is Alice and I'm 30 years old. Can you store that?\nAssistant:"}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:46,157 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:46,157 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:46,158 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:46,158 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:46,158 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:46,159 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:47,275 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'610'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'616'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9997'), (b'x-ratelimit-remaining-tokens', b'199916'), (b'x-ratelimit-reset-requests', b'23.115s'), (b'x-ratelimit-reset-tokens', b'24ms'), (b'x-request-id', b'req_4165af0218132705f39fb157bfbf4d6b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7cedb77b63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:47,276 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:47,276 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:47,276 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:47,276 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:47,277 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:47,277 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 11 Jul 2025 08:02:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'heltia-txbadh', 'openai-processing-ms': '610', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '616', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9997', 'x-ratelimit-remaining-tokens': '199916', 'x-ratelimit-reset-requests': '23.115s', 'x-ratelimit-reset-tokens': '24ms', 'x-request-id': 'req_4165af0218132705f39fb157bfbf4d6b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95d6c7cedb77b63e-IST', 'content-encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'})
2025-07-11 11:02:47,277 - openai._base_client - DEBUG - request_id: req_4165af0218132705f39fb157bfbf4d6b
2025-07-11 11:02:47,278 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=21, prompt_tokens=170, total_tokens=191, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:47,278 - semantic_kernel.connectors.ai.chat_completion_client_base - INFO - processing 1 tool calls in parallel.
2025-07-11 11:02:47,278 - semantic_kernel.kernel - INFO - Calling test_plugin-store_user_info function with args: {"name":"Alice","age":30}
2025-07-11 11:02:47,279 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-store_user_info invoking.
2025-07-11 11:02:47,279 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': "My name is Alice and I'm 30 years old. Can you store that?", 'name': 'Alice', 'age': 30}
2025-07-11 11:02:47,279 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-store_user_info succeeded.
2025-07-11 11:02:47,279 - semantic_kernel.functions.kernel_function - DEBUG - Function result: Stored information: Alice, age 30
2025-07-11 11:02:47,279 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 0.000832s
2025-07-11 11:02:47,281 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-92df8d1f-10c1-4009-a7b0-8c456fc34cbc', 'json_data': {'messages': [{'role': 'user', 'content': "You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: My name is Alice and I'm 30 years old. Can you store that?\nAssistant:"}, {'role': 'assistant', 'tool_calls': [{'id': 'call_lRj4yxVGs03yCVfNRbk5ntCi', 'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'arguments': '{"name":"Alice","age":30}'}}]}, {'role': 'tool', 'content': 'Stored information: Alice, age 30', 'tool_call_id': 'call_lRj4yxVGs03yCVfNRbk5ntCi'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:47,282 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:47,283 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:47,283 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:47,283 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:47,284 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:47,284 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:48,708 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'781'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'784'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9996'), (b'x-ratelimit-remaining-tokens', b'199906'), (b'x-ratelimit-reset-requests', b'30.535s'), (b'x-ratelimit-reset-tokens', b'28ms'), (b'x-request-id', b'req_df45fe465f35d025a3baff71f4ddfd0b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7d5bfa6b63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:48,710 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:48,710 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:48,712 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:48,712 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:48,712 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:48,712 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 11 Jul 2025 08:02:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'heltia-txbadh', 'openai-processing-ms': '781', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '784', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9996', 'x-ratelimit-remaining-tokens': '199906', 'x-ratelimit-reset-requests': '30.535s', 'x-ratelimit-reset-tokens': '28ms', 'x-request-id': 'req_df45fe465f35d025a3baff71f4ddfd0b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95d6c7d5bfa6b63e-IST', 'content-encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'})
2025-07-11 11:02:48,713 - openai._base_client - DEBUG - request_id: req_df45fe465f35d025a3baff71f4ddfd0b
2025-07-11 11:02:48,713 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=22, prompt_tokens=210, total_tokens=232, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:48,714 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat succeeded.
2025-07-11 11:02:48,714 - semantic_kernel.functions.kernel_function - DEBUG - Function result: I've stored your information, Alice! You're 30 years old now. How can I assist you further?
2025-07-11 11:02:48,714 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 2.560539s
2025-07-11 11:02:48,715 - semantic_kernel - INFO - Completed conversation 2
2025-07-11 11:02:48,715 - semantic_kernel - INFO - Starting conversation 3: What information do you have about me?
2025-07-11 11:02:48,715 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat invoking.
2025-07-11 11:02:48,715 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': 'What information do you have about me?'}
2025-07-11 11:02:48,715 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendering list of 3 blocks
2025-07-11 11:02:48,715 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendered prompt: 
You are a helpful assistant that can perform calculations and manage user data.
You have access to functions for:
- Adding numbers
- Storing user information 
- Retrieving user information

Be conversational and use the functions when appropriate.

User: What information do you have about me?
Assistant: 
2025-07-11 11:02:48,717 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a8b625b9-e9d0-4f2c-a72e-6f51741c8839', 'json_data': {'messages': [{'role': 'user', 'content': 'You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: What information do you have about me?\nAssistant:'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:48,718 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:48,718 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:48,719 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:48,719 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:48,719 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:48,719 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:49,834 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'410'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'419'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9995'), (b'x-ratelimit-remaining-tokens', b'199922'), (b'x-ratelimit-reset-requests', b'37.723s'), (b'x-ratelimit-reset-tokens', b'23ms'), (b'x-request-id', b'req_659df690a4a3faa716e91006ec9b270b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7df4de0b63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:49,835 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:49,835 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:49,836 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:49,836 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:49,836 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:49,836 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 11 Jul 2025 08:02:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'heltia-txbadh', 'openai-processing-ms': '410', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '419', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9995', 'x-ratelimit-remaining-tokens': '199922', 'x-ratelimit-reset-requests': '37.723s', 'x-ratelimit-reset-tokens': '23ms', 'x-request-id': 'req_659df690a4a3faa716e91006ec9b270b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95d6c7df4de0b63e-IST', 'content-encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'})
2025-07-11 11:02:49,837 - openai._base_client - DEBUG - request_id: req_659df690a4a3faa716e91006ec9b270b
2025-07-11 11:02:49,837 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=13, prompt_tokens=162, total_tokens=175, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:49,838 - semantic_kernel.connectors.ai.chat_completion_client_base - INFO - processing 1 tool calls in parallel.
2025-07-11 11:02:49,838 - semantic_kernel.kernel - INFO - Calling test_plugin-get_user_info function with args: {}
2025-07-11 11:02:49,838 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-get_user_info invoking.
2025-07-11 11:02:49,838 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': 'What information do you have about me?'}
2025-07-11 11:02:49,839 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-get_user_info succeeded.
2025-07-11 11:02:49,839 - semantic_kernel.functions.kernel_function - DEBUG - Function result: User: Alice, Age: 30
2025-07-11 11:02:49,839 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 0.000392s
2025-07-11 11:02:49,840 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a02f8e78-5359-40e4-b88a-c282d21a89c9', 'json_data': {'messages': [{'role': 'user', 'content': 'You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: What information do you have about me?\nAssistant:'}, {'role': 'assistant', 'tool_calls': [{'id': 'call_r7fn5XYyUqROclUdtCcnqA9m', 'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'arguments': '{}'}}]}, {'role': 'tool', 'content': 'User: Alice, Age: 30', 'tool_call_id': 'call_r7fn5XYyUqROclUdtCcnqA9m'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:49,841 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:49,842 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:49,843 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:49,843 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:49,844 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:49,844 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:51,574 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'638'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'751'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9994'), (b'x-ratelimit-remaining-tokens', b'199915'), (b'x-ratelimit-reset-requests', b'44.882s'), (b'x-ratelimit-reset-tokens', b'25ms'), (b'x-request-id', b'req_cca51479e65b710f2d09c9430b3a9005'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7e61970b63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:51,575 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:51,575 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:51,576 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:51,576 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:51,576 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:51,577 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 11 Jul 2025 08:02:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'heltia-txbadh', 'openai-processing-ms': '638', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '751', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9994', 'x-ratelimit-remaining-tokens': '199915', 'x-ratelimit-reset-requests': '44.882s', 'x-ratelimit-reset-tokens': '25ms', 'x-request-id': 'req_cca51479e65b710f2d09c9430b3a9005', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95d6c7e61970b63e-IST', 'content-encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'})
2025-07-11 11:02:51,577 - openai._base_client - DEBUG - request_id: req_cca51479e65b710f2d09c9430b3a9005
2025-07-11 11:02:51,578 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=25, prompt_tokens=194, total_tokens=219, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:51,578 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat succeeded.
2025-07-11 11:02:51,578 - semantic_kernel.functions.kernel_function - DEBUG - Function result: I have the information that your name is Alice and you are 30 years old. How can I assist you further?
2025-07-11 11:02:51,578 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 2.862988s
2025-07-11 11:02:51,578 - semantic_kernel - INFO - Completed conversation 3
2025-07-11 11:02:51,578 - semantic_kernel - INFO - Starting conversation 4: Can you add 100 and 200, then tell me my info again?
2025-07-11 11:02:51,579 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat invoking.
2025-07-11 11:02:51,579 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': 'Can you add 100 and 200, then tell me my info again?'}
2025-07-11 11:02:51,579 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendering list of 3 blocks
2025-07-11 11:02:51,579 - semantic_kernel.prompt_template.kernel_prompt_template - DEBUG - Rendered prompt: 
You are a helpful assistant that can perform calculations and manage user data.
You have access to functions for:
- Adding numbers
- Storing user information 
- Retrieving user information

Be conversational and use the functions when appropriate.

User: Can you add 100 and 200, then tell me my info again?
Assistant: 
2025-07-11 11:02:51,581 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5bc2af3b-f9c8-44bc-88dc-0f698d14e745', 'json_data': {'messages': [{'role': 'user', 'content': 'You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: Can you add 100 and 200, then tell me my info again?\nAssistant:'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:51,582 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:51,583 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:51,583 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:51,584 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:51,584 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:51,584 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:53,039 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'987'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'992'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9993'), (b'x-ratelimit-remaining-tokens', b'199917'), (b'x-ratelimit-reset-requests', b'52.268s'), (b'x-ratelimit-reset-tokens', b'24ms'), (b'x-request-id', b'req_075897ce0152c3e6fdd400a9ba6d2f97'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7f0dfb9b63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:53,040 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:53,040 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:53,040 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:53,041 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:53,041 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:53,041 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 11 Jul 2025 08:02:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'heltia-txbadh', 'openai-processing-ms': '987', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '992', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9993', 'x-ratelimit-remaining-tokens': '199917', 'x-ratelimit-reset-requests': '52.268s', 'x-ratelimit-reset-tokens': '24ms', 'x-request-id': 'req_075897ce0152c3e6fdd400a9ba6d2f97', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95d6c7f0dfb9b63e-IST', 'content-encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'})
2025-07-11 11:02:53,041 - openai._base_client - DEBUG - request_id: req_075897ce0152c3e6fdd400a9ba6d2f97
2025-07-11 11:02:53,041 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=51, prompt_tokens=170, total_tokens=221, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:53,041 - semantic_kernel.connectors.ai.chat_completion_client_base - INFO - processing 2 tool calls in parallel.
2025-07-11 11:02:53,042 - semantic_kernel.kernel - INFO - Calling test_plugin-add_numbers function with args: {"a": 100, "b": 200}
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-add_numbers invoking.
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': 'Can you add 100 and 200, then tell me my info again?', 'a': 100, 'b': 200}
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-add_numbers succeeded.
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - DEBUG - Function result: The sum of 100 and 200 is 300
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 0.000097s
2025-07-11 11:02:53,042 - semantic_kernel.kernel - INFO - Calling test_plugin-get_user_info function with args: {}
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-get_user_info invoking.
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - DEBUG - Function arguments: {'user_input': 'Can you add 100 and 200, then tell me my info again?'}
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - INFO - Function test_plugin-get_user_info succeeded.
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - DEBUG - Function result: User: Alice, Age: 30
2025-07-11 11:02:53,042 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 0.000253s
2025-07-11 11:02:53,044 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9995db44-8fd4-428a-b823-d99dbe826099', 'json_data': {'messages': [{'role': 'user', 'content': 'You are a helpful assistant that can perform calculations and manage user data.\nYou have access to functions for:\n- Adding numbers\n- Storing user information \n- Retrieving user information\n\nBe conversational and use the functions when appropriate.\n\nUser: Can you add 100 and 200, then tell me my info again?\nAssistant:'}, {'role': 'assistant', 'tool_calls': [{'id': 'call_OaE58l0hCEa2qFy3IiXDJw8a', 'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'arguments': '{"a": 100, "b": 200}'}}, {'id': 'call_02EXVjlexMvfLHS4jfCTpY8H', 'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'arguments': '{}'}}]}, {'role': 'tool', 'content': 'The sum of 100 and 200 is 300', 'tool_call_id': 'call_OaE58l0hCEa2qFy3IiXDJw8a'}, {'role': 'tool', 'content': 'User: Alice, Age: 30', 'tool_call_id': 'call_02EXVjlexMvfLHS4jfCTpY8H'}], 'model': 'gpt-4o-mini', 'max_tokens': 500, 'stream': False, 'temperature': 0.7, 'tool_choice': 'auto', 'tools': [{'type': 'function', 'function': {'name': 'test_plugin-add_numbers', 'description': 'Add two numbers together', 'parameters': {'type': 'object', 'properties': {'a': {'type': 'integer'}, 'b': {'type': 'integer'}}, 'required': ['a', 'b']}}}, {'type': 'function', 'function': {'name': 'test_plugin-get_user_info', 'description': 'Retrieve stored user information', 'parameters': {'type': 'object', 'properties': {}, 'required': []}}}, {'type': 'function', 'function': {'name': 'test_plugin-store_user_info', 'description': 'Get user information and store it', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'integer'}}, 'required': ['name', 'age']}}}, {'type': 'function', 'function': {'name': 'chat_plugin-telemetry_chat', 'description': '', 'parameters': {'type': 'object', 'properties': {'user_input': {'type': 'object'}}, 'required': ['user_input']}}}]}}
2025-07-11 11:02:53,044 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-07-11 11:02:53,044 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-11 11:02:53,045 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-11 11:02:53,045 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-11 11:02:53,045 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-11 11:02:53,045 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-11 11:02:54,597 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 11 Jul 2025 08:02:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'heltia-txbadh'), (b'openai-processing-ms', b'1156'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1171'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9993'), (b'x-ratelimit-remaining-tokens', b'199903'), (b'x-ratelimit-reset-requests', b'59.621s'), (b'x-ratelimit-reset-tokens', b'29ms'), (b'x-request-id', b'req_8954e3eca025bbe1be45a7dccbf0ed49'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95d6c7fa5dd6b63e-IST'), (b'Content-Encoding', b'br'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-07-11 11:02:54,598 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-11 11:02:54,598 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-11 11:02:54,728 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-11 11:02:54,729 - httpcore.http11 - DEBUG - response_closed.started
2025-07-11 11:02:54,729 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-11 11:02:54,729 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 11 Jul 2025 08:02:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'heltia-txbadh', 'openai-processing-ms': '1156', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1171', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9993', 'x-ratelimit-remaining-tokens': '199903', 'x-ratelimit-reset-requests': '59.621s', 'x-ratelimit-reset-tokens': '29ms', 'x-request-id': 'req_8954e3eca025bbe1be45a7dccbf0ed49', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95d6c7fa5dd6b63e-IST', 'content-encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'})
2025-07-11 11:02:54,729 - openai._base_client - DEBUG - request_id: req_8954e3eca025bbe1be45a7dccbf0ed49
2025-07-11 11:02:54,730 - semantic_kernel.connectors.ai.open_ai.services.open_ai_handler - INFO - OpenAI usage: CompletionUsage(completion_tokens=40, prompt_tokens=254, total_tokens=294, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0))
2025-07-11 11:02:54,730 - semantic_kernel.functions.kernel_function - INFO - Function chat_plugin-telemetry_chat succeeded.
2025-07-11 11:02:54,730 - semantic_kernel.functions.kernel_function - DEBUG - Function result: The sum of 100 and 200 is 300. 

As for your information, you are Alice, and you are 30 years old. Is there anything else you'd like to do?
2025-07-11 11:02:54,730 - semantic_kernel.functions.kernel_function - INFO - Function completed. Duration: 3.151062s
2025-07-11 11:02:54,730 - semantic_kernel - INFO - Completed conversation 4
